<div class="container-fluid">
  <div class="row" data-masonry="{&quot;percentPosition&quot;: true }" style="position: relative; height: 1wh;">
    <div class="col-sm-6 col-lg-3 mb-3" style="position: absolute; left: 0%; top: 0px;">
      <div class="card p-1">
        <section class="card-body text-white" id="profile-viewer">
          <div class="d-flex flex-column align-items-center text-center">
            <img src="https://bootdey.com/img/Content/avatar/avatar7.png" alt="Admin" class="rounded-circle"
              width="150">
            <div class="mt-3 text-white">
              <h4>
                <%= user.name %>
              </h4>
              <p class="text-secondary mb-1">Full Stack Developer</p>
              <p class="text-white font-size-sm">Tacoma, WA</p>
              <button class="btn btn-outline-primary">Follow</button>
              <button class="btn btn-outline-primary">Message</button>
            </div>
            <button class="btn btn-outline-primary" onclick="showEditModal()">Edit Profile</button>

          </div>
        </section>
        <div class="modal" id="editModal" tabindex="-1" role="dialog">
          <div class="modal-dialog" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title">Edit Profile</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="hideEditModal()">
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
              <div class="modal-body">
                <form id="editForm">
                  <div class="form-group">
                    <label for="name">Name</label>
                    <input type="text" class="form-control" id="name" name="name">
                  </div>
                  <div class="form-group">
                    <label for="email">Email</label>
                    <input type="email" class="form-control" id="email" name="email">
                  </div>
                  <button type="button" class="btn btn-primary" onclick="submitEditForm()">Save Changes</button>
                </form>
              </div>
            </div>
          </div>
        </div>
        <section class="card-body text-white m-2">
          <ul class="list-group list-group-flush">
            <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
              <h6 class="mb-0"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                  fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                  class="feather feather-globe mr-2 icon-inline">
                  <circle cx="12" cy="12" r="10"></circle>
                  <line x1="2" y1="12" x2="22" y2="12"></line>
                  <path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z">
                  </path>
                </svg>Website</h6>
              <span class="text-secondary">https://bootdey.com</span>
            </li>
            <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
              <h6 class="mb-0"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                  fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                  class="feather feather-github mr-2 icon-inline">
                  <path
                    d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22">
                  </path>
                </svg>Github</h6>
              <span class="text-secondary">bootdey</span>
            </li>
            <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
              <h6 class="mb-0"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                  fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                  class="feather feather-twitter mr-2 icon-inline text-info">
                  <path
                    d="M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z">
                  </path>
                </svg>Twitter</h6>
              <span class="text-secondary">@bootdey</span>
            </li>
            <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
              <h6 class="mb-0"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                  fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                  class="feather feather-instagram mr-2 icon-inline text-danger">
                  <rect x="2" y="2" width="20" height="20" rx="5" ry="5"></rect>
                  <path d="M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"></path>
                  <line x1="17.5" y1="6.5" x2="17.51" y2="6.5"></line>
                </svg>Instagram</h6>
              <span class="text-secondary">bootdey</span>
            </li>
            <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
              <h6 class="mb-0"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                  fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                  class="feather feather-facebook mr-2 icon-inline text-primary">
                  <path d="M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"></path>
                </svg>Facebook</h6>
              <span class="text-secondary">bootdey</span>
            </li>
          </ul>
        </section>
      </div>
    </div>
    <div class="col-sm-6 col-lg-6 mb-3" style="position: absolute; left: 0%; top: 0px;">
      <%- include('_user-collection') %>
    </div>
    <div class="col-sm-6 col-lg-3 mb-3" style="position: absolute; left: 0%; top: 0px;">
      <div class="card p-1">
        <section class="card-body text-white">
          <h6 class="d-flex align-items-center mb-3">
            <i class="material-icons text-info mr-2">Top Systems</i>
          </h6>
          <table class="table-dark table-bordered" style="width: 100%;"></table>
          <thead>
            <tr>
              <th>Name</th>
              <th>Platform</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>Console 1</td>
              <td>Type 1</td>
            </tr>
            <tr>
              <td>Console 2</td>
              <td>Type 2</td>
            </tr>
          </tbody>
          </table>
        </section>
        <section class="card-body text-white">
          <h6 class="d-flex align-items-center mb-3">
            <i class="material-icons text-info mr-2">Wishlist</i>
          </h6>
          <table class="table-dark table-bordered" style="width: 100%;">
            <thead>
              <tr>
                <th>Game Title</th>
                <th>Platform</th>
              </tr>
            </thead>
            <tbody>
              <% wishlist.forEach(game=> { %>
                <tr>
                  <td>
                    <%= game[1] %>
                  </td>
                  <td>
                    <%= game[0] %>
                  </td>
                </tr>
                <% }) %>
            </tbody>
          </table>
        </section>
      </div>
    </div>
  </div>
</div>



<script>
  function filterTable(userGames) {
    console.log(userGames, 'userGames');
    const selectedPlatform = document.getElementById('platformFilter').value;
    console.log(userGames, 'userGames beforte fileter')
    const filteredGames = selectedPlatform === 'all' ? userGames : userGames.filter(game => game.platform === selectedPlatform);
    console.log(filteredGames, 'filtered games');
    renderGames(filteredGames);
  }

  function renderGames(games) {
    const itemsPerPage = 20;
    const currentPage = 1;

    const startIdx = (currentPage - 1) * itemsPerPage;
    const endIdx = startIdx + itemsPerPage;
    const displayedGames = games.slice(startIdx, endIdx);
    const tableBody = document.querySelector('#gameTable tbody');
    tableBody.innerHTML = '';

    displayedGames.forEach(game => {
      const row = document.createElement('tr');
      row.classList.add('text-secondary');
      row.setAttribute('data-platform', game.platform);
      const platformCell = document.createElement('td');
      platformCell.textContent = game.platform;
      row.appendChild(platformCell);
      const gameCell = document.createElement('td');
      const gameLink = document.createElement('a');
      gameLink.href = `/games/byId/${game.id}/?_method=PUT`;
      gameLink.method = 'POST';
      gameLink.textContent = game.game;
      gameCell.appendChild(gameLink);
      row.appendChild(gameCell);
      tableBody.appendChild(row);
    });
  }

  async function addToCollection(userId, gameId, platformId, copyCount) {
    try {
      const response = await fetch('/games/add-to-collection', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ userId, gameId, platformId }),
      });
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      copyCount++;
      const data = await response.json();
      console.log('Game added to collection:', data);
      updateCopiesOwnedCell(userId, platformId, gameId, copyCount);

    } catch (error) {
      console.error('There was a problem with the fetch operation:', error);
    }
  }

  async function removeFromCollection(userId, gameId, platformId) {
    console.log(platformId)
    try {
      const response = await fetch('games/remove-from-collection', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ userId, gameId, platformId }),
      });
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      const data = await response.json();
    } catch (error) {
      console.error('There was a problem with the fetch operation:', error);
    }
  }

  function updateCopiesOwnedCell(userId, platformId, gameId, copyCount) {
    const cellId = `copies-owned-${platformId}-${gameId}`;
    const cell = document.getElementById(cellId);

    if (cell) {
      if (copyCount === 0) {
        cell.innerHTML = `<button onclick="addToCollection(${userId}, ${gameId}, ${platformId}, ${copyCount})">Add to Collection</button>`;
      } else {
        cell.innerHTML = `${copyCount} owned <button onclick="addToCollection(${userId}, ${gameId}, ${platformId}, ${copyCount})">+1</button>
                  <button onclick="removeFromCollection(${userId}, ${gameId}, ${platformId}, ${copyCount})">-1</button>`
      }
    }
  }

  function filterTable(userGames) {
    const selectedPlatform = document.getElementById('platformFilter').value;
    const filteredGames = selectedPlatform === 'all' ? userGames : userGames.filter(game => game.platform === selectedPlatform);
    renderGames(filteredGames);
  }

  function renderGames(games) {
    const itemsPerPage = 20;
    const currentPage = 1;

    const startIdx = (currentPage - 1) * itemsPerPage;
    const endIdx = startIdx + itemsPerPage;
    const displayedGames = games.slice(startIdx, endIdx);
    const tableBody = document.querySelector('#gameTable tbody');
    tableBody.innerHTML = '';

    displayedGames.forEach(game => {
      const row = document.createElement('tr');
      row.classList.add('text-secondary');
      row.setAttribute('data-platform', game.platform);
      const platformCell = document.createElement('td');
      platformCell.textContent = game.platform;
      row.appendChild(platformCell);
      const gameCell = document.createElement('td');
      const gameLink = document.createElement('a');
      gameLink.href = `/games/byId/${game.id}/?_method=PUT`;
      gameLink.method = 'POST';
      gameLink.textContent = game.game;
      gameCell.appendChild(gameLink);
      row.appendChild(gameCell);
      tableBody.appendChild(row);
    });
  }

  function showEditModal() {
    $('#editModal').modal('show');
  }

  function hideEditModal() {
    $('#editModal').modal('hide');
  }

  function submitEditForm() {
  const name = document.getElementById('name').value;
  const email = document.getElementById('email').value;

  fetch('/profile/edit', {
    method: 'PUT', // Change the method to PUT
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({ name, email }),
  })
  .then(response => response.json())
  .then(data => {
    console.log('Profile updated:', data);
    hideEditModal();
  })
  .catch(error => {
    console.error('Error updating profile:', error);
    });
}

</script>